doctype html
html
    head

        //- Documentation to help edit/configure files:
        //- https://leafletjs.com/reference-1.7.1.html
        //- https://pugjs.org/api/getting-started.html
        //- https://getbootstrap.com/docs/5.0/getting-started/introduction/

        //- UI uses Bootstrap 4
        link(rel='stylesheet', href='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css', integrity='sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T', crossorigin='anonymous')
        link(rel='stylesheet', href='https://unpkg.com/leaflet@1.6.0/dist/leaflet.css', integrity='sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==', crossorigin='')

    //- Map and Schedule content
    body
        div(style='width: auto; height: 100%; margin-left: auto; margin-right: auto; overflow-x: hidden; overflow-y: auto;')

            //- MAP         
            #map(style='height: 64em; width: 100%')
            script(src='https://unpkg.com/leaflet@1.6.0/dist/leaflet.js', integrity='sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew==',
            crossorigin='')

            - var pickupCircle = []
            - var dropoffCircle = []

            for coordinates in info
                - var pickupCoor = []
                - var dropoffCoor = []

                - pickupCoor.push(coordinates['pickupLat'])
                - pickupCoor.push(coordinates['pickupLon'])
                - pickupCircle.push(pickupCoor)

                - dropoffCoor.push(coordinates['dropoffLat'])
                - dropoffCoor.push(coordinates['dropoffLon'])
                - dropoffCircle.push(dropoffCoor)
            
            //- Sets up the map display options
            script.
                var map = L.map("map").setView([37.961632, -121.275604], 12.5);
                var token = !{JSON.stringify(mapBox)};
                L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
                    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
                    maxZoom: 19,
                    maxNativeZoom: 17,
                    scrollWheelZoom: false, // Prevents the map from moving when scrolling (only allows two finger scroll or mouse click)
                    id: 'mapbox/streets-v11',
                    tileSize: 512,
                    zoomOffset: -1,
                    accessToken: token 
                }).addTo(map);
                map.scrollWheelZoom.disable(); // Prevents the map from moving when scrolling (only allows two finger scroll or mouse click)
            script.
                var circ = !{JSON.stringify(pickupCircle)};
                for (var i = 1; i<circ.length; i++) { 
                    L.circleMarker(circ[i], {
                        color: 'orange',
                        opacity: 0,
                        fillColor: 'orange',
                        fillOpacity: 1,
                        radius: 14,
                    }).addTo(map); 
                };
            script.
                var circ = !{JSON.stringify(dropoffCircle)};
                for (var i = 1; i<circ.length; i++) { 
                    L.circleMarker(circ[i], {
                        color: '#87b9ff',
                        opacity: 0,
                        fillColor: '#87b9ff',
                        fillOpacity: 1,
                        radius: 14,
                    }).addTo(map); 
                };
            script.
                var latlngs = !{JSON.stringify(pickupCircle)} 
                var polyline = L.polyline(latlngs, {
                    color: 'black',
                    weight: 2.5,
                    opacity: 0,
                }).addTo(map);
                map.fitBounds(polyline.getBounds()) // Fits the map to show the whole path without cutting any parts off

            .container.mt-5.mb-5(style='width:61em; border: solid .5em #f4f4f4; border-radius: .4em')
                .col.responsive
                    .row(style='padding: 0')
                        table.table.table-responsive.table-sm
                            tr 
                                thead.table-borderless
                                    th.font-weight-bold(style='position: sticky; top: 0; font-size: 1.4em; text-align: center') Trip Status
                                    th.font-weight-bold(style='position: sticky; top: 0; font-size: 1.4em; text-align: center') Pickup Time
                                    th.font-weight-bold(style='position: sticky; top: 0; font-size: 1.4em; text-align: center') Pickup Address 
                                    th.font-weight-bold(style='position: sticky; top: 0; font-size: 1.4em; text-align: center') Dropoff Address 
                            tbody 
                                for passengerInfo in info
                                    tr
                                        - var pickupTime = moment(passengerInfo.reqPickupTime + ":00", "HH:mm:ss")
                                        - pickupTime = moment(new Date(pickupTime)).format('h:mm a')
                                        - var status = passengerInfo.tripStatus
                                        - status = status.charAt(0).toUpperCase() + status.slice(1)

                                        td.table-bordered.font-weight-light(style='font-size: 0.8em; width: 12em; text-align: center') #{status}
                                        td.table-bordered.font-weight-light(style='font-size: 0.8em; width: 12em; text-align: center') #{pickupTime}
                                        td.table-bordered.font-weight-light(style='font-size: 0.8em; width: 24em; text-align: center') #{passengerInfo.pickupAddress}, #{passengerInfo.pickupCity} CA, #{passengerInfo.pickupZipcode} 
                                        td.table-bordered.font-weight-light(style='font-size: 0.8em; width: 24em; text-align: center') #{passengerInfo.dropoffAddress}, #{passengerInfo.dropoffCity} CA, #{passengerInfo.dropoffZipcode} 
                                        